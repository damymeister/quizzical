{"version":3,"sources":["components/Home.js","components/Quiz.js","App.js","index.js"],"names":["Home","props","_React$useState","React","useState","_React$useState2","_slicedToArray","clickButtonavilable","setclickButtonavilable","_React$useState3","category","amount","type","_React$useState4","gameOptions","setGameOptions","_React$useState5","_React$useState6","allQuestionsandAnswers","setallQuestionsandAnswers","urlChange","event","_event$target","target","name","value","prevGameoptions","_objectSpread","_defineProperty","useEffect","url","fetch","then","res","json","data","results","catch","error","console","log","createElement","className","id","onChange","disabled","onClick","length","viewChange","Quiz","allData","allAnswers","setAllAnswers","selectedAnswerIndexes","setSelectedAnswerIndexes","correctAnswers","setCorrectAnswers","_React$useState7","_React$useState8","allAnswersChecked","setAllAnswersChecked","_React$useState9","_React$useState10","endGame","setendGame","_React$useState11","_React$useState12","result","setResult","_React$useState13","_React$useState14","countAnswers","setcountAnswers","_React$useState15","_React$useState16","clickedQuestions","setClickedQuestions","_React$useState17","_React$useState18","setclickedCorrectAnswers","_React$useState19","_React$useState20","isPreviousQuestionSet","setisPreviousQuestionSet","getClassName","questionIndex","answerIndex","answer","correct_answer","ans","map","concat","_toConsumableArray","incorrect_answers","answers","newAnswer","i","randomIndex","Math","floor","random","temp","shuffle","corrans","indexOf","answerAndQuestionsRender","key","decode","question","newSelectedAnswerIndexes","slice","newisPreviousQuestionSet","undefined","answerbuttonChanges","Quizreset","href","App","setAllData","quizStart","setQuizStart","setResetQuiz","propsQuestionsAnswers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.212fe50c.chunk.js","sourcesContent":["import React from \"react\"\r\nimport App from \"../App\";\r\nexport default function Home(props) {\r\n\tconst [clickButtonavilable, setclickButtonavilable] = React.useState(false)\r\n\r\n    const [gameOptions, setGameOptions] = React.useState(\r\n\t\t{\r\n\t\t\tcategory: 9,\r\n\t\t\tamount: 5,\r\n\t\t\ttype: \"multiple\"\r\n\t\t}\r\n\t);\r\n\r\n\tconst [allQuestionsandAnswers, setallQuestionsandAnswers] = React.useState([])\r\n\r\n\r\n  const urlChange = event => {\r\n    const {name, value} = event.target\r\n    setGameOptions(prevGameoptions =>{\r\n        return {\r\n            ...prevGameoptions,\r\n            [name]: value\r\n        }\r\n\r\n    })\r\n  }\r\n\r\n  React.useEffect(() => {\r\n\tif (gameOptions.category !== \"\" && gameOptions.amount !== 0 && gameOptions.type !== \"\") {\r\n\t\tsetclickButtonavilable(true)\r\n\t  const url =\r\n\t\t\"https://opentdb.com/api.php?amount=\" + gameOptions.amount + \"&category=\" + gameOptions.category +\"&type=\" + gameOptions.type;\r\n\ttry{\r\n\t  fetch(url)\r\n\t\t.then((res) => res.json())\r\n\t\t.then((data) => setallQuestionsandAnswers(data.results))\r\n\t\t.catch((error) => console.log(error));\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(\"Nie udalo sie wczytac pytan\")\r\n\t}\r\n\t}\r\n  }, [gameOptions]);\r\n\r\n  function changeView() {\r\n\tif(allQuestionsandAnswers.length) props.viewChange(allQuestionsandAnswers)\r\n  }\r\n    return(\r\n\r\n  <div className=\"home-main\">\r\n    <div className=\"blob-top\"></div>\r\n    <div className=\"home-centered\">\r\n    <div className=\"home-title\">Quizzical</div>\r\n    <div className=\"home-desc\">Answer the questions and test your knowledge!</div>\r\n    <div className=\"grid-select\">\r\n    <div className=\"choose\">Category:</div>\r\n    <select\r\n\t\t\t\t\t\t\t\t\tname=\"category\"\r\n\t\t\t\t\t\t\t\t\tid=\"category\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"custom-select\"\r\n\t\t\t\t\t\t\t\t\tvalue={gameOptions.category}\r\n\t\t\t\t\t\t\t\t\tonChange={urlChange}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<option value=\"9\">General Knowledge</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"10\">Entertainment: Books</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"11\">Entertainment: Film</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"12\">Entertainment: Music</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"13\">Entertainment: Musicals &amp; Theatres</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"14\">Entertainment: Television</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"15\">Entertainment: Video Games</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"16\">Entertainment: Board Games</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"17\">Science &amp; Nature</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"18\">Science: Computers</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"19\">Science: Mathematics</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"20\">Mythology</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"21\">Sports</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"22\">Geography</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"23\">History</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"24\">Politics</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"25\">Art</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"26\">Celebrities</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"27\">Animals</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"28\">Vehicles</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"29\">Entertainment: Comics</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"30\">Science: Gadgets</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"31\">Entertainment: Japanese Anime &amp; Manga</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"32\">Entertainment: Cartoon &amp; Animations</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n    </div>\r\n    <div className=\"grid-select\">\r\n    <div className=\"choose\">Number of Questions:</div>\r\n    <select\r\n\t\t\t\t\t\t\t\t\tname=\"amount\"\r\n\t\t\t\t\t\t\t\t\tid=\"amount\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"custom-select\"\r\n\t\t\t\t\t\t\t\t\tvalue={gameOptions.amount}\r\n\t\t\t\t\t\t\t\t\tonChange={urlChange}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<option value=\"5\">5</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n    </div>\r\n    <div className=\"grid-select\">\r\n    <div className=\"choose\">Type:</div>\r\n    <select\r\n\t\t\t\t\t\t\t\t\tname=\"type\"\r\n\t\t\t\t\t\t\t\t\tid=\"type\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"custom-select\"\r\n\t\t\t\t\t\t\t\t\tvalue={gameOptions.type}\r\n\t\t\t\t\t\t\t\t\tonChange={urlChange}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<option value=\"multiple\">Multiple Choice</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"boolean\">True or False</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n    </div>\r\n    <button className=\"home-button\" disabled={!clickButtonavilable} onClick={changeView}>Start Quiz</button>\r\n    </div>\r\n    <div className=\"blob-bottom\"></div>\r\n  </div>\r\n\r\n    )\r\n}","import React from \"react\";\nimport Home from \"./Home\"\nimport { decode } from 'html-entities';\n\nexport default function Quiz(props){\n    const allData = props.allData;\n    const [allAnswers, setAllAnswers] = React.useState([]);\n    const [selectedAnswerIndexes, setSelectedAnswerIndexes] = React.useState([]);\n    const [correctAnswers, setCorrectAnswers] = React.useState([])\n    const [allAnswersChecked, setAllAnswersChecked] = React.useState(false)\n    const [endGame, setendGame] = React.useState(false)\n    const [result, setResult] = React.useState(0)\n    const [countAnswers, setcountAnswers] = React.useState(1)\n    const [clickedQuestions, setClickedQuestions] = React.useState([]); \n    const [clickedCorrectAnswers, setclickedCorrectAnswers] = React.useState([]);\n    const [isPreviousQuestionSet, setisPreviousQuestionSet] = React.useState([])\n    function restartGame() {\n      setAllAnswers([]);\n      setSelectedAnswerIndexes([]);\n      setCorrectAnswers([]);\n      setAllAnswersChecked(false);\n      setendGame(true);\n      setResult(0);\n      setcountAnswers(0);\n      setClickedQuestions([])\n      setclickedCorrectAnswers([])\n      setisPreviousQuestionSet([])\n      props.Quizreset(true);\n    }\n\n    function getClassName(selectedAnswerIndexes, questionIndex, answerIndex, endGame, answer) {\n      if (endGame) {\n        if(selectedAnswerIndexes[questionIndex] === answerIndex && answer === allData[questionIndex].correct_answer) return \"question-answer correct \"\n        else if (selectedAnswerIndexes[questionIndex] === answerIndex) return \"question-answer incorrect\"\n        else return \"question-answer\"\n      } else {\n        return selectedAnswerIndexes[questionIndex] === answerIndex\n          ? \"question-answer clicked\"\n          : \"question-answer\";\n      }\n    }\n    function shuffle(answer){\n      let newAnswer = [...answer];\n      for (let i = 0; i < newAnswer.length; i++){\n        const randomIndex = Math.floor(Math.random() * newAnswer.length);\n        let temp = newAnswer[i]\n        newAnswer[i] = newAnswer[randomIndex]\n        newAnswer[randomIndex] = temp\n      }\n      return newAnswer;\n    }\n    \n    React.useEffect(() => {\n      if (countAnswers != 0 && correctAnswers.length != 0 && countAnswers === (correctAnswers.length + 1)) {\n        setAllAnswersChecked(true);\n      }\n    }, [countAnswers]);\n    React.useEffect(() => {\n        if (allData) {\n            const ans = (\n              allData.map((data) => [            \n                data.correct_answer,            \n                ...data.incorrect_answers          \n            ])\n            );\n            setAllAnswers(ans.map(answers => shuffle(answers)));\n        }\n    }, [allData]);\n    \n    React.useEffect(() => {\n        if (allData) {\n            const corrans = (\n              allData.map((data) => [           \n                 data.correct_answer,            \n                 ...data.incorrect_answers          \n                ].indexOf(data.correct_answer))\n            );\n            setCorrectAnswers(corrans)\n        }\n    }, [allData])\n    \n    function answerbuttonChanges(answerIndex, questionIndex, answer) {\n        const newSelectedAnswerIndexes = selectedAnswerIndexes.slice()\n        const newisPreviousQuestionSet = isPreviousQuestionSet.slice()\n        if(clickedQuestions.indexOf(questionIndex) !== -1)\n        {\n          setcountAnswers(countAnswers);\n        }\n        else{\n          setcountAnswers(countAnswers + 1 );\n          setClickedQuestions([...clickedQuestions, questionIndex]);\n        }\n        newSelectedAnswerIndexes[questionIndex] = answerIndex\n        setSelectedAnswerIndexes(newSelectedAnswerIndexes);\n        \n        if (isPreviousQuestionSet[questionIndex] === undefined) {\n          if(answer === allData[questionIndex].correct_answer){\n          setResult(result + 1)\n          newisPreviousQuestionSet[questionIndex] = true\n          setisPreviousQuestionSet(newisPreviousQuestionSet)\n          }\n          else{\n            setResult(result)\n          }\n        } \n        else{\n          if(isPreviousQuestionSet[questionIndex] === true){//If previous answer was true\n            if(answer !== allData[questionIndex].correct_answer){\n              setResult(result - 1)\n              newisPreviousQuestionSet[questionIndex] = false\n              setisPreviousQuestionSet(newisPreviousQuestionSet)\n                }\n          }else{//If previous answer was false\n            if(answer === allData[questionIndex].correct_answer){\n              setResult(result + 1)\n              newisPreviousQuestionSet[questionIndex] = true\n              setisPreviousQuestionSet(newisPreviousQuestionSet)\n            }\n        }\n    }\n\n    }\n\n    const answerAndQuestionsRender = allData && allData.map((data, questionIndex) => {\n          return(\n            <div className=\"questions-main \" key={questionIndex}>\n              <div className=\"question-icon\">\n              <h3 className=\"question-question \">{decode(data.question)}</h3>\n              <div className={endGame ? (isPreviousQuestionSet[questionIndex] ? \"correct-icon\" : \"incorrect-icon\") : \"correct-icon nonvisible\"}></div>\n              </div>\n              <div className=\"all-answers\">\n              {allAnswers[questionIndex] && allAnswers[questionIndex].map((answer, answerIndex) => (\n                <button\n                  disabled={endGame}\n                  key={answerIndex}\n                  className={getClassName(selectedAnswerIndexes, questionIndex, answerIndex, endGame, answer)}\n                  onClick={() => answerbuttonChanges(answerIndex, questionIndex, answer)}\n                >\n                  {decode(answer)}\n                </button> \n              ))}\n              </div>\n            </div>\n          )\n    });\n    return(\n      <div className=\"quiz-main\">\n           <div className=\"blob-top\"></div>\n          {allData ? answerAndQuestionsRender : <Home />}\n          {endGame ? (\n          <div className=\"scoreAndButton\">\n          <div className=\"score\">\n            You scored {result} out of {correctAnswers.length} points.\n          </div>\n          <button className = \"quiz-button restartGame\" onClick = {restartGame}>\n          Play Again\n          </button>\n        </div>\n          ):(\n            <button className={allAnswersChecked ? \"quiz-button\" : \"quiz-button disabled\"} disabled={!allAnswersChecked} onClick={() => setendGame(true)}>\n            Check Answers\n            </button>\n          )}\n        <div className=\"blob-bottom\"></div>\n        <div className=\"author\">Developed by <a href=\"https://www.linkedin.com/in/mateusz-adamczyk-062936209/\" target=\"_blank\">DamyMeister</a></div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport Home from \"./components/Home\"\nimport Quiz from \"./components/Quiz\"\n\nexport default function App() {\n  const [allData, setAllData] = React.useState([])\n  const [quizStart, setQuizStart] = React.useState(false)\n  const [resetQuiz, setResetQuiz] = React.useState(false)\n  \n  function viewChange(propsQuestionsAnswers) {\n    setAllData(propsQuestionsAnswers)\n    setQuizStart(true)\n  }\n\n  function Quizreset(){\n    setResetQuiz(true)\n    setQuizStart(false);\n  }\n  return (\n    <div className=\"app-main\">\n      <div className=\"container\">\n        {quizStart && allData.length !==0 ? <Quiz allData={allData} Quizreset = {Quizreset} /> : <Home viewChange={viewChange} />}\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"./components/style.css\"\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}